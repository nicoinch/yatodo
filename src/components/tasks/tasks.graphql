fragment tasksFields on tasks {
    content
    id
    long_description
    is_done
    project {
        color
        name
    }
}

mutation updateTasks ($id: Int!, $isDone: Boolean!) {
    update_tasks_by_pk (
        pk_columns: {id: $id}
        _set: { is_done: $isDone }
    ) {
        id
        is_done
    }
}

subscription pendingTasks {
    tasks(order_by: {updated_at: desc}, where: {is_done: {_eq: false}}) {
        ...tasksFields
    }
}

subscription allTasks {
    tasks(order_by: [{is_done: asc}, {updated_at: desc}]) {
        ...tasksFields
    }
}

mutation insertTasks ($content: String!, $longDescription: String!, $projectId: Int!) {
    insert_tasks(objects: [{content: $content, long_description: $longDescription, is_done: false, project_id: $projectId}]) {
        returning {
            id
        }
    }
}

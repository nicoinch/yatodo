fragment projectsFields on projects {
    id
    name
    color
    is_active
    progress: tasks_aggregate(where: {is_done: {_eq: true}}) {
        aggregate {
            count
        }
    }
    progressTotal: tasks_aggregate {
        aggregate {
            count
        }
    }
}

subscription allProjects {
    projects {
        ...projectsFields
    }
}

query projects {
    projects {
        id
        is_active
        name
        color
    }
}

mutation insertProjects ($name: String!, $color: String!) {
    insert_projects(objects: [{name: $name, color: $color, is_active: true}]) {
        returning {
            id
            is_active
            name
            color
            created_at
            updated_at
        }
    }
}

fragment projectDetailsFields on projects  {
    color
    id
    is_active
    name
    pendingTasks: tasks(where: {is_done: {_eq: false}}) {
        ...TasksFields
    }
    doneTasks: tasks(where: {is_done: {_eq: true}}) {
        ...TasksFields
    }
}

subscription projectDetails ($projectId: Int!) {
    projects(where: {id: {_eq: $projectId}}) {
        ...projectDetailsFields
    }
}
